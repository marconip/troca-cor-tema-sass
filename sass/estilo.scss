//troca-cor-tema-sass.html
@mixin text-color($color: primary, $effect: none) {

    @if ($color==primary) {
        color: red;

        @if ($effect==hover) {
            &:hover {
                color: darkred;
            }
        }

        /* This class denotes a color scheme */
        .dark-theme & {
            color: gray;

            @if ($effect==hover) {
                &:hover {
                    color: black;
                }
            }
        }
    }

    @if ($color==secondary) {
        color: orange;

        @if ($effect==hover) {
            &:hover {
                color: red;
            }
        }

        /* This class denotes a color scheme */
        .dark-theme & {
            color: silver;

            @if ($effect==hover) {
                &:hover {
                    color: white;
                }
            }
        }
    }
}

///Aplicando
body {
    &.dark-theme {
        background-color: #333;
    }
}

h1 {
    @include text-color();
}

a {
    @include text-color(secondary, hover);
}
///FIM troca-cor-tema-sass.html


//////////////troca-cor-tema2-sass.html
/*Theme definitions*/

$themes: (light: (backgroundColor: white,
        textColor: #408bbd,
        buttonTextColor: #408bbd,
        buttonTextTransform: none,
        buttonTextHoverColor: #61b0e7,
        buttonColor: #fff,
        buttonBorder: 2px solid #408bbd,
    ),
    dark: (backgroundColor: #222,
        textColor: #ddd,
        buttonTextColor: #aaa,
        buttonTextTransform: uppercase,
        buttonTextHoverColor: #ddd,
        buttonColor: #333,
        buttonBorder: 1px solid #333,
    ),
);

/* Implementation of themes */
@mixin themify($themes) {

    @each $theme,
    $map in $themes {
        .theme-#{$theme} & {
            $theme-map: () !global;

            @each $key,
            $submap in $map {
                $value: map-get(map-get($themes, $theme), '#{$key}');
                $theme-map: map-merge($theme-map, ($key: $value)) !global;
            }

            @content;
            $theme-map: null !global;
        }
    }
}

@function themed($key) {
    @return map-get($theme-map, $key);
}

/* Actual styles for the app*/
body {
    margin: 0;
}

html,
body {
    height: 100%;
}

#app-root {
    margin: 0;
    padding: 0;
    height: 100%;
    display: flex;
    flex-direction: column;

    >div {
        display: flex;
        flex: 1;
    }
}

.app-container {
    display: flex;
    flex-direction: column;
    flex: 1;
    align-items: center;
    justify-content: center;

    .title {
        font-family: sans-serif;
        font-weight: lighter;
    }

    @include themify($themes) {
        color: themed('textColor');
        background-color: themed('backgroundColor');
    }

    .button {
        max-width: 20em;
        cursor: pointer;
        border-radius: 5px;
        padding: 15px 32px;
        display: inline-block;
        transition: color 0.1s, border-color 0.1s, background-color 0.1s;

        @include themify($themes) {
            border: themed('buttonBorder');
            color: themed('buttonTextColor');
            border-color: themed('buttonTextColor');
            background-color: themed('buttonColor');
            text-transform: themed('buttonTextTransform');

            &:hover {
                color: themed('buttonTextHoverColor');
                border-color: themed('buttonTextHoverColor');
                background-color: themed('buttonHoverColor');
            }
        }
    }
}
//////////////FIM troca-cor-tema2-sass.html